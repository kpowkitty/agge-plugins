plugins {
    id 'java'
    id 'maven-publish'
    id 'net.researchgate.release' version '2.8.1'
}

allprojects {
    repositories {
        mavenLocal()
        maven {
            url = 'https://repo.runelite.net'
        }
        mavenCentral()
        jcenter()
    }

    def runeLiteVersion = '1.10.32'

    plugins.withType(JavaPlugin) {
        dependencies {
            compileOnly 'org.projectlombok:lombok:1.18.20'
            annotationProcessor 'org.projectlombok:lombok:1.18.20'
            compileOnly group: 'net.runelite', name: 'client', version: runeLiteVersion
            testImplementation 'junit:junit:4.12'
            testImplementation group: 'net.runelite', name: 'client', version: runeLiteVersion
            testImplementation group: 'net.runelite', name: 'jshell', version: runeLiteVersion
        }
    }

    // xxx make this work
    // Task to copy resources from root res to build/resources/main
    //task copyResources(type: Copy) {
    //    from 'res' // Source directory of your fonts (relative to root)
    //    into "${buildDir}/resources/main" // Destination in build output
    //}
}

dependencies {
    implementation project(path: ':extern:PiggyPlugins:EthansApi')
    implementation project(path: ':lib:PiggyUtils')
    implementation project(path: ':src:AutoBoner')
    implementation project(path: ':src:AutoCombat')
    implementation project(path: ':src:Fighter')
    implementation project(path: ':src:AutoTele')
    implementation project(path: ':src:BetterProfiles')
    implementation project(path: ':src:ChinBreakHandler')
    implementation project(path: ':src:DialogueContinuer')
    implementation project(path: ':src:Firemaking')
    implementation project(path: ':src:HerbCleaner')
    implementation project(path: ':src:ItemCombiner')
    implementation project(path: ':src:ItemDropper')
    implementation project(path: ':src:Skiller')
    implementation project(path: ':src:PrayAgainstPlayer')
    implementation project(path: ':src:PrayerFlicker')
    implementation project(path: ':src:ShiftClickWalker')
    implementation project(path: ':src:SixHourLog')
    implementation project(path: ':src:StrategyExample')
    implementation project(path: ':src:UpkeepPlugin')
    implementation project(path: ':src:PathingTesting')
    implementation project(path: ':src:AutoLoot')
    implementation project(path: ':src:AutoQuester')
    implementation project(path: ':lib:shortest-path')
    implementation project(path: ':lib:lib')
    implementation project(path: ':lib:MessageBus')
    implementation 'io.reactivex.rxjava3:rxjava:3.1.6'
}

sourceSets {
    main {
        java {
            srcDir "src"
        }
    }
}

group = 'com.aggeplugins'
version = '1.0.0'
sourceCompatibility = "11"

task FatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.example.Main'
    }
    baseName = 'agge-plugins'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    // xxx make this work
    // Copy resources for plugins.
    //from copyResources
    with jar
}

subprojects {
    tasks.withType(Jar) {
        doLast {
            copy {
                from("./build/libs/")
                into("../release/")
            }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            credentials {
                username 'admin'
                password 'password'
            }
            url "http://baseUrl/artifactory/libs-release-local"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
targetCompatibility = JavaVersion.VERSION_11
